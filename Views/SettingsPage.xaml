<Page
    x:Class="IntelligentKioskSample.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:IntelligentKioskSample.Views"
    xmlns:ctl="using:IntelligentKioskSample.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <ctl:StringMatchToVisibilityConverter x:Key="StringMatchToVisibilityConverter"/>
        <ctl:StringContainsToVisibilityConverter x:Key="StringContainsToVisibilityConverter"/>
        <x:String x:Key="CustomEndpointName">Custom</x:String>
        <x:String x:Key="LocalHost">://localhost</x:String>
        <Style TargetType="Button" x:Key="LocalHostSetupButtonStyle">
            <Style.Setters>
                <Setter Property="Foreground" Value="OrangeRed"/>
                <Setter Property="Margin" Value="0,0,0,-8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Content" Value="Click here for extra setup steps&#x0a;when targeting localhost endpoints."/>
                <Setter Property="Flyout">
                    <Setter.Value>
                        <Flyout>
                            <StackPanel Orientation="Vertical" Width="350">
                                <TextBlock Text="In order for the kiosk app to make http requests to another process in the local machine, such as a Docker application running a container, Windows needs to be configured to enable it.&#x0a;&#x0a;Please run the following command from an admin command line prompt in your machine (you can select and copy the text below to the clipboard):" TextWrapping="Wrap"/>
                                <TextBlock IsTextSelectionEnabled="True" FontStyle="Italic" Foreground="OrangeRed" Margin="0,16,0,0" Text="CheckNetIsolation.exe LoopbackExempt -a -n=intelligentkiosksample_csqyw2evbp0ke" TextWrapping="Wrap"/>
                            </StackPanel>
                        </Flyout>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
          EntranceNavigationTransitionInfo.IsTargetElement="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <CommandBar x:Name="commandBar" DefaultLabelPosition="Right" >
            <AppBarButton Icon="Undo" Label="Reset Settings" Click="OnResetSettingsClick"/>

            <CommandBar.Content>
                <TextBlock Text="Settings" Style="{ThemeResource PageTitleTextBlockStyle}" Margin="14,10,12,0"/>
            </CommandBar.Content>
        </CommandBar>
        
        <ScrollViewer Grid.Row="1">

            <StackPanel Orientation="Vertical" Margin="12,12" >
                <StackPanel>

                    <TextBlock Text="Cognitive Services Keys" Style="{StaticResource SubheaderTextBlockStyle}" VerticalAlignment="Center"/>

                    <Grid Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <PasswordBox Header="Face API Key" Password="{Binding FaceApiKey, Mode=TwoWay}" VerticalAlignment="Top" />
                        <ComboBox Grid.Column="1" Margin="10,0,6,0" Header="Endpoint" Width="355"
                                  x:Name="faceApiEndpointCombobox"
                                  ItemsSource="{Binding AvailableApiEndpoints}" 
                                  SelectedItem="{Binding BindingFaceApiKeyEndpoint, Mode=TwoWay}"/>
                        <StackPanel Grid.Column="2" Orientation="Horizontal"
                                    Visibility="{Binding ElementName=faceApiEndpointCombobox, Path=SelectedValue, Converter={StaticResource StringMatchToVisibilityConverter}, ConverterParameter={StaticResource CustomEndpointName}}">
                            <TextBox Header="Custom Face API Endpoint" MaxWidth="450" x:Name="faceApiEndpointTextBox"
                                 PlaceholderText="Custom endpoint (e.g. https://virginia.api.cognitive.microsoft.us)" 
                                 Text="{Binding CustomFaceApiEndpoint, Mode=TwoWay}" />
                            <Button Style="{StaticResource LocalHostSetupButtonStyle}" Visibility="{Binding ElementName=faceApiEndpointTextBox, Path=Text, Converter={StaticResource StringContainsToVisibilityConverter}, ConverterParameter={StaticResource LocalHost}}"/>
                        </StackPanel>
                    </Grid>

                    <Grid Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <PasswordBox Header="Computer Vision API Key" Password="{Binding VisionApiKey, Mode=TwoWay}" />
                        <ComboBox Grid.Column="1" Margin="10,0,6,0" Header="Endpoint" Width="355"
                                  x:Name="visionApiEndpointCombobox"
                                  ItemsSource="{Binding AvailableApiEndpoints}" 
                                  SelectedItem="{Binding BindingVisionApiKeyEndpoint, Mode=TwoWay}"/>
                        <StackPanel Grid.Column="2" Orientation="Horizontal" 
                                    Visibility="{Binding ElementName=visionApiEndpointCombobox, Path=SelectedValue, Converter={StaticResource StringMatchToVisibilityConverter}, ConverterParameter={StaticResource CustomEndpointName}}">
                            <TextBox Header="Custom Computer Vision API Endpoint" MaxWidth="450" x:Name="computerVisionApiEndpointTextBox"
                                 PlaceholderText="Custom endpoint (e.g. https://virginia.api.cognitive.microsoft.us)" 
                                 Text="{Binding CustomVisionApiEndpoint, Mode=TwoWay}" />
                            <Button Style="{StaticResource LocalHostSetupButtonStyle}" Visibility="{Binding ElementName=computerVisionApiEndpointTextBox, Path=Text, Converter={StaticResource StringContainsToVisibilityConverter}, ConverterParameter={StaticResource LocalHost}}"/>
                        </StackPanel>
                    </Grid>

                    <PasswordBox Header="Bing Search API Key" Password="{Binding BingSearchApiKey, Mode=TwoWay}" Margin="0,10,0,0" />

                    <PasswordBox Header="Bing Auto Suggestion API Key" Password="{Binding BingAutoSuggestionApiKey, Mode=TwoWay}" Margin="0,10,0,0" />

                    <Grid Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <PasswordBox Header="Text Analytics Key" Password="{Binding TextAnalyticsKey, Mode=TwoWay}" />
                        <ComboBox Grid.Column="1" Margin="10,0,6,0" Header="Endpoint" Width="355"
                                  x:Name="textAnalyticsEndpointCombobox"
                                  ItemsSource="{Binding AvailableApiEndpoints}" 
                                  SelectedItem="{Binding BindingTextAnalyticsApiKeyEndpoint, Mode=TwoWay}"/>
                        <StackPanel Grid.Column="2" Orientation="Horizontal" 
                                    Visibility="{Binding ElementName=textAnalyticsEndpointCombobox, Path=SelectedValue, Converter={StaticResource StringMatchToVisibilityConverter}, ConverterParameter={StaticResource CustomEndpointName}}">
                            <TextBox Header="Custom Text Analytics Endpoint" MaxWidth="450" x:Name="textAnalyticsApiEndpointTextBox"
                                     PlaceholderText="Custom endpoint (e.g. https://virginia.api.cognitive.microsoft.us)" 
                                     Text="{Binding CustomTextAnalyticsEndpoint, Mode=TwoWay}" />
                            <Button Style="{StaticResource LocalHostSetupButtonStyle}" Visibility="{Binding ElementName=textAnalyticsApiEndpointTextBox, Path=Text, Converter={StaticResource StringContainsToVisibilityConverter}, ConverterParameter={StaticResource LocalHost}}"/>
                        </StackPanel>
                    </Grid>

                    <PasswordBox Header="Translator Text API Key" Password="{Binding TranslatorTextApiKey, Mode=TwoWay}" Margin="0,10,0,0" />

                    <StackPanel Orientation="Horizontal" Margin="0,15,0,0">
                        <Button VerticalAlignment="Bottom" Content="Click here if you need keys" >
                            <Button.Flyout>
                                <Flyout>
                                    <StackPanel Width="400"  >
                                        <TextBlock TextWrapping="Wrap" Text="We recommend getting S0 level keys from your Azure Subscription. Below are some handy deep links for creating the keys depending on your needs. For keys that support multiple regions, make sure to set the corresponding region when entering your keys in the kiosk settings."/>
                                        <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesFace" Content="Face"/>
                                        <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesComputerVision" Content="Computer Vision"/>
                                        <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesBingSearch-v7" Content="Bing Search"/>
                                        <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesBingAutosuggest-v7" Content="Bing Autosuggest"/>
                                        <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesTextAnalytics" Content="Text Analytics"/>
                                        <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesTextTranslation" Content="Translator Text"/>

                                        <TextBlock TextWrapping="WrapWholeWords" Foreground="OrangeRed" Margin="0,10,0,0" Text="Important: The free-tier (F0) keys provided by Azure won't support the load from the real-time demos in the kiosk. For the best experience upgrade to a paid key if using those demos."/>
                                    </StackPanel>
                                </Flyout>
                            </Button.Flyout>
                        </Button>

                        <Button Margin="24,0,0,0" Content="Run Key Validation Test">
                            <Button.Flyout>
                                <Flyout Opened="KeyTestFlyoutOpened">
                                    <StackPanel Width="400">
                                        <TextBlock Text="Couple of notes about the validation tests:"/>
                                        <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Margin="6,0,0,0" Text="- Recently acquired keys might need a few minutes to become valid"/>
                                        <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Margin="6,0,0,0" Text="- If you no longer need a particular service, set its key to empty to remove it from validation"/>
                                        <TextBox x:Name="keyTestResultTextBox" Margin="0,6,0,0" Height="150" AcceptsReturn="True" TextWrapping="Wrap" IsReadOnly="True"></TextBox>
                                    </StackPanel>
                                </Flyout>
                            </Button.Flyout>
                        </Button>
                    </StackPanel>
                </StackPanel>

                <StackPanel Margin="0,50,0,0">
                    <TextBlock Text="Miscellaneous" Style="{StaticResource SubheaderTextBlockStyle}"/>

                    <Grid Margin="0,6,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Header="Workspace Name" PlaceholderText="Something like JoeKiosk, or use the button to create an unique name" Text="{Binding WorkspaceKey, Mode=TwoWay}"  />
                        <Button Content="Generate Name" Grid.Column="1" Margin="10,0,6,0" Click="OnGenerateNewKeyClicked" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                    </Grid>
                    <TextBlock Foreground="Gray" FontStyle="Italic" Text="Tip: If you would like to share face identification models between multiple kiosk instances, just enter the same Face API Key and Workspace Name for them." />

                    <ComboBox Margin="0,6,0,0" x:Name="cameraSourceComboBox" Header="Camera Source"  SelectionChanged="OnCameraSourceSelectionChanged"/>
                    <ToggleSwitch IsOn="{Binding ShowDebugInfo, Mode=TwoWay}" Header="Show debug info:" Margin="0,6,0,0"/>
                
                    <StackPanel Orientation="Horizontal">
                        <Slider x:Name="MinDetectableFaceSizeSlider" Minimum="0" Maximum="100" Value="{Binding MinDetectableFaceCoveragePercentage, Mode=TwoWay}" SmallChange="1" LargeChange="5" Header="Minimum detectable face size (as % of image height):" HorizontalAlignment="Left" Margin="0,0,0,0" StepFrequency="1"/>
                        <TextBlock Text="{Binding ElementName=MinDetectableFaceSizeSlider, Path=Value}" Style="{StaticResource TitleTextBlockStyle}" VerticalAlignment="Center" Margin="12,0,0,0"/>
                    </StackPanel>
                 </StackPanel>

                <StackPanel Margin="0,25,0,0">
                    <TextBlock Text="Mall Kiosk" Style="{StaticResource SubheaderTextBlockStyle}"/>
                    <TextBox TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding MallKioskDemoCustomSettings, Mode=TwoWay}" PlaceholderText="Paste custom settings for Mall Kiosk Demo here"/>
                    <Button Margin="0,6,0,0" Click="ResetMallKioskSettingsButtonClick">Reset to Default Mall Kiosk Settings</Button>
                </StackPanel>

            </StackPanel>
            
        </ScrollViewer>

    </Grid>
</Page>
